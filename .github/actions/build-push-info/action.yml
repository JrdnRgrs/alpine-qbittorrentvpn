name: build-push-info

description: Get docker tags and other version related infos

inputs:
  qbt_tag:
    description: "qBittorrent release tag"
    required: false
  docker_tag:
    description: "docker tag"
    required: false
  commit_sha:
    description: "Commit SHA the image is built from"
    required: false

outputs:
  qbt_release_tag:
    description: "The qBittorrent release tag"
    value: ${{ steps.qbt-release.outputs.release_tag }}
  qbt_version_number:
    description: "The extracted version number from the release tag"
    value: ${{ steps.qbt-release.outputs.version_number }}
  date:
    description: "Current UTC date in YYYYMMDD format"
    value: ${{ steps.env-info.outputs.date }}
  tags:
    description: "Docker tags to publish"
    value: ${{ steps.docker-tags.outputs.tags }}
  build_sha_short:
    description: "Short commit hash the image is built from"
    value: ${{ steps.env-info.outputs.build_sha_short }}

runs:
  using: "composite"
  steps:
    - name: Get latest release or use provided tag
      id: qbt-release
      uses: ./.github/actions/get-qbt-release
      with:
        qbt_tag: ${{ inputs.qbt_tag }}

    - name: Setup additional environment variables
      id: env-info
      shell: bash
      run: |
        echo "date=$(date -u +%Y%m%d)" | tee -a $GITHUB_OUTPUT
        if [[ -n "${{ inputs.commit_sha }}" ]]; then
          build_sha="${{ inputs.commit_sha }}"
        else
          build_sha=$(git rev-parse HEAD)
        fi

        echo "build_sha=$build_sha" | tee -a $GITHUB_OUTPUT
        echo "build_sha_short=${build_sha:0:7}" | tee -a $GITHUB_OUTPUT

    - name: Set up Docker Tags
      id: docker-tags
      shell: bash
      run: |
        GHCR_REPO="ghcr.io/trigus42/alpine-qbittorrentvpn"
        DOCKERHUB_REPO="trigus42/qbittorrentvpn"

        TAGS_NAMES=()

        # Check if a tag is provided
        if [[ -n "${{ inputs.docker_tag }}" ]]; then
          TAGS_NAMES+=(
            "${{ inputs.docker_tag }}"
            "${{ inputs.docker_tag }}-${{ steps.env-info.outputs.build_sha }}"
            "${{ inputs.docker_tag }}-${{ steps.env-info.outputs.build_sha }}-qbt${{ steps.qbt-release.outputs.version_number }}"
          )
        # Check if no custom commit SHA is provided
        elif [[ -z "${{ inputs.commit_sha }}" ]]; then
          # Master branch gets extra tags
          if [[ "${{ github.ref_name }}" == "master" ]]; then
            TAGS_NAMES+=(
              "latest"
              "qbt${{ steps.qbt-release.outputs.version_number }}"
              "qbt${{ steps.qbt-release.outputs.version_number }}-${{ steps.env-info.outputs.date }}" # Legacy tag
            )
          fi

          TAGS_NAMES+=(
            "${{ github.head_ref || github.ref_name }}"
            "${{ github.head_ref || github.ref_name }}-qbt${{ steps.qbt-release.outputs.version_number }}"
          )
        fi

        TAGS_NAMES+=(
          "${{ steps.env-info.outputs.build_sha }}"
          "${{ steps.env-info.outputs.build_sha }}-qbt${{ steps.qbt-release.outputs.version_number }}"
        )

        # Prepare the tags for both repositories
        DOCKER_TAGS=()
        for tag in "${TAGS_NAMES[@]}"; do
          DOCKER_TAGS+=("$GHCR_REPO:$tag")
          DOCKER_TAGS+=("$DOCKERHUB_REPO:$tag")
        done

        bash .github/helper/setOutput.sh "tags" "$(IFS=$'\n'; echo "${DOCKER_TAGS[*]}")"
